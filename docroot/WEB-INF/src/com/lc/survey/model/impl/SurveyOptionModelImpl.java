/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.lc.survey.model.impl;

import com.lc.survey.model.SurveyOption;
import com.lc.survey.model.SurveyOptionModel;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the SurveyOption service. Represents a row in the &quot;lc_SurveyOption&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.lc.survey.model.SurveyOptionModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link SurveyOptionImpl}.
 * </p>
 *
 * @author kevin
 * @see SurveyOptionImpl
 * @see com.lc.survey.model.SurveyOption
 * @see com.lc.survey.model.SurveyOptionModel
 * @generated
 */
public class SurveyOptionModelImpl extends BaseModelImpl<SurveyOption>
	implements SurveyOptionModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a survey option model instance should use the {@link com.lc.survey.model.SurveyOption} interface instead.
	 */
	public static final String TABLE_NAME = "lc_SurveyOption";
	public static final Object[][] TABLE_COLUMNS = {
			{ "surveyOptionId", Types.BIGINT },
			{ "surveyMainId", Types.BIGINT },
			{ "surveyPageId", Types.BIGINT },
			{ "surveyQuestionId", Types.BIGINT },
			{ "no", Types.INTEGER },
			{ "option_", Types.VARCHAR },
			{ "isAns", Types.BOOLEAN },
			{ "pageDirectId", Types.BIGINT },
			{ "uploadFileId", Types.BIGINT },
			{ "creatorId", Types.BIGINT },
			{ "modifierId", Types.BIGINT },
			{ "createDate", Types.BIGINT },
			{ "modifiedDate", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table lc_SurveyOption (surveyOptionId LONG not null primary key,surveyMainId LONG,surveyPageId LONG,surveyQuestionId LONG,no INTEGER,option_ VARCHAR(200) null,isAns BOOLEAN,pageDirectId LONG,uploadFileId LONG,creatorId LONG,modifierId LONG,createDate LONG,modifiedDate LONG)";
	public static final String TABLE_SQL_DROP = "drop table lc_SurveyOption";
	public static final String ORDER_BY_JPQL = " ORDER BY surveyOption.no ASC";
	public static final String ORDER_BY_SQL = " ORDER BY lc_SurveyOption.no ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.lc.survey.model.SurveyOption"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.lc.survey.model.SurveyOption"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.lc.survey.model.SurveyOption"),
			true);
	public static long ISANS_COLUMN_BITMASK = 1L;
	public static long SURVEYMAINID_COLUMN_BITMASK = 2L;
	public static long SURVEYPAGEID_COLUMN_BITMASK = 4L;
	public static long SURVEYQUESTIONID_COLUMN_BITMASK = 8L;
	public static long NO_COLUMN_BITMASK = 16L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.lc.survey.model.SurveyOption"));

	public SurveyOptionModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _surveyOptionId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setSurveyOptionId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _surveyOptionId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return SurveyOption.class;
	}

	@Override
	public String getModelClassName() {
		return SurveyOption.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("surveyOptionId", getSurveyOptionId());
		attributes.put("surveyMainId", getSurveyMainId());
		attributes.put("surveyPageId", getSurveyPageId());
		attributes.put("surveyQuestionId", getSurveyQuestionId());
		attributes.put("no", getNo());
		attributes.put("option", getOption());
		attributes.put("isAns", getIsAns());
		attributes.put("pageDirectId", getPageDirectId());
		attributes.put("uploadFileId", getUploadFileId());
		attributes.put("creatorId", getCreatorId());
		attributes.put("modifierId", getModifierId());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long surveyOptionId = (Long)attributes.get("surveyOptionId");

		if (surveyOptionId != null) {
			setSurveyOptionId(surveyOptionId);
		}

		Long surveyMainId = (Long)attributes.get("surveyMainId");

		if (surveyMainId != null) {
			setSurveyMainId(surveyMainId);
		}

		Long surveyPageId = (Long)attributes.get("surveyPageId");

		if (surveyPageId != null) {
			setSurveyPageId(surveyPageId);
		}

		Long surveyQuestionId = (Long)attributes.get("surveyQuestionId");

		if (surveyQuestionId != null) {
			setSurveyQuestionId(surveyQuestionId);
		}

		Integer no = (Integer)attributes.get("no");

		if (no != null) {
			setNo(no);
		}

		String option = (String)attributes.get("option");

		if (option != null) {
			setOption(option);
		}

		Boolean isAns = (Boolean)attributes.get("isAns");

		if (isAns != null) {
			setIsAns(isAns);
		}

		Long pageDirectId = (Long)attributes.get("pageDirectId");

		if (pageDirectId != null) {
			setPageDirectId(pageDirectId);
		}

		Long uploadFileId = (Long)attributes.get("uploadFileId");

		if (uploadFileId != null) {
			setUploadFileId(uploadFileId);
		}

		Long creatorId = (Long)attributes.get("creatorId");

		if (creatorId != null) {
			setCreatorId(creatorId);
		}

		Long modifierId = (Long)attributes.get("modifierId");

		if (modifierId != null) {
			setModifierId(modifierId);
		}

		Long createDate = (Long)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Long modifiedDate = (Long)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}
	}

	@Override
	public long getSurveyOptionId() {
		return _surveyOptionId;
	}

	@Override
	public void setSurveyOptionId(long surveyOptionId) {
		_surveyOptionId = surveyOptionId;
	}

	@Override
	public long getSurveyMainId() {
		return _surveyMainId;
	}

	@Override
	public void setSurveyMainId(long surveyMainId) {
		_columnBitmask |= SURVEYMAINID_COLUMN_BITMASK;

		if (!_setOriginalSurveyMainId) {
			_setOriginalSurveyMainId = true;

			_originalSurveyMainId = _surveyMainId;
		}

		_surveyMainId = surveyMainId;
	}

	public long getOriginalSurveyMainId() {
		return _originalSurveyMainId;
	}

	@Override
	public long getSurveyPageId() {
		return _surveyPageId;
	}

	@Override
	public void setSurveyPageId(long surveyPageId) {
		_columnBitmask |= SURVEYPAGEID_COLUMN_BITMASK;

		if (!_setOriginalSurveyPageId) {
			_setOriginalSurveyPageId = true;

			_originalSurveyPageId = _surveyPageId;
		}

		_surveyPageId = surveyPageId;
	}

	public long getOriginalSurveyPageId() {
		return _originalSurveyPageId;
	}

	@Override
	public long getSurveyQuestionId() {
		return _surveyQuestionId;
	}

	@Override
	public void setSurveyQuestionId(long surveyQuestionId) {
		_columnBitmask |= SURVEYQUESTIONID_COLUMN_BITMASK;

		if (!_setOriginalSurveyQuestionId) {
			_setOriginalSurveyQuestionId = true;

			_originalSurveyQuestionId = _surveyQuestionId;
		}

		_surveyQuestionId = surveyQuestionId;
	}

	public long getOriginalSurveyQuestionId() {
		return _originalSurveyQuestionId;
	}

	@Override
	public int getNo() {
		return _no;
	}

	@Override
	public void setNo(int no) {
		_columnBitmask = -1L;

		_no = no;
	}

	@Override
	public String getOption() {
		if (_option == null) {
			return StringPool.BLANK;
		}
		else {
			return _option;
		}
	}

	@Override
	public void setOption(String option) {
		_option = option;
	}

	@Override
	public Boolean getIsAns() {
		return _isAns;
	}

	@Override
	public void setIsAns(Boolean isAns) {
		_columnBitmask |= ISANS_COLUMN_BITMASK;

		if (!_setOriginalIsAns) {
			_setOriginalIsAns = true;

			_originalIsAns = _isAns;
		}

		_isAns = isAns;
	}

	public Boolean getOriginalIsAns() {
		return _originalIsAns;
	}

	@Override
	public long getPageDirectId() {
		return _pageDirectId;
	}

	@Override
	public void setPageDirectId(long pageDirectId) {
		_pageDirectId = pageDirectId;
	}

	@Override
	public long getUploadFileId() {
		return _uploadFileId;
	}

	@Override
	public void setUploadFileId(long uploadFileId) {
		_uploadFileId = uploadFileId;
	}

	@Override
	public long getCreatorId() {
		return _creatorId;
	}

	@Override
	public void setCreatorId(long creatorId) {
		_creatorId = creatorId;
	}

	@Override
	public long getModifierId() {
		return _modifierId;
	}

	@Override
	public void setModifierId(long modifierId) {
		_modifierId = modifierId;
	}

	@Override
	public long getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(long createDate) {
		_createDate = createDate;
	}

	@Override
	public long getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(long modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			SurveyOption.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public SurveyOption toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (SurveyOption)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		SurveyOptionImpl surveyOptionImpl = new SurveyOptionImpl();

		surveyOptionImpl.setSurveyOptionId(getSurveyOptionId());
		surveyOptionImpl.setSurveyMainId(getSurveyMainId());
		surveyOptionImpl.setSurveyPageId(getSurveyPageId());
		surveyOptionImpl.setSurveyQuestionId(getSurveyQuestionId());
		surveyOptionImpl.setNo(getNo());
		surveyOptionImpl.setOption(getOption());
		surveyOptionImpl.setIsAns(getIsAns());
		surveyOptionImpl.setPageDirectId(getPageDirectId());
		surveyOptionImpl.setUploadFileId(getUploadFileId());
		surveyOptionImpl.setCreatorId(getCreatorId());
		surveyOptionImpl.setModifierId(getModifierId());
		surveyOptionImpl.setCreateDate(getCreateDate());
		surveyOptionImpl.setModifiedDate(getModifiedDate());

		surveyOptionImpl.resetOriginalValues();

		return surveyOptionImpl;
	}

	@Override
	public int compareTo(SurveyOption surveyOption) {
		int value = 0;

		if (getNo() < surveyOption.getNo()) {
			value = -1;
		}
		else if (getNo() > surveyOption.getNo()) {
			value = 1;
		}
		else {
			value = 0;
		}

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof SurveyOption)) {
			return false;
		}

		SurveyOption surveyOption = (SurveyOption)obj;

		long primaryKey = surveyOption.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		SurveyOptionModelImpl surveyOptionModelImpl = this;

		surveyOptionModelImpl._originalSurveyMainId = surveyOptionModelImpl._surveyMainId;

		surveyOptionModelImpl._setOriginalSurveyMainId = false;

		surveyOptionModelImpl._originalSurveyPageId = surveyOptionModelImpl._surveyPageId;

		surveyOptionModelImpl._setOriginalSurveyPageId = false;

		surveyOptionModelImpl._originalSurveyQuestionId = surveyOptionModelImpl._surveyQuestionId;

		surveyOptionModelImpl._setOriginalSurveyQuestionId = false;

		surveyOptionModelImpl._originalIsAns = surveyOptionModelImpl._isAns;

		surveyOptionModelImpl._setOriginalIsAns = false;

		surveyOptionModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<SurveyOption> toCacheModel() {
		SurveyOptionCacheModel surveyOptionCacheModel = new SurveyOptionCacheModel();

		surveyOptionCacheModel.surveyOptionId = getSurveyOptionId();

		surveyOptionCacheModel.surveyMainId = getSurveyMainId();

		surveyOptionCacheModel.surveyPageId = getSurveyPageId();

		surveyOptionCacheModel.surveyQuestionId = getSurveyQuestionId();

		surveyOptionCacheModel.no = getNo();

		surveyOptionCacheModel.option = getOption();

		String option = surveyOptionCacheModel.option;

		if ((option != null) && (option.length() == 0)) {
			surveyOptionCacheModel.option = null;
		}

		surveyOptionCacheModel.isAns = getIsAns();

		surveyOptionCacheModel.pageDirectId = getPageDirectId();

		surveyOptionCacheModel.uploadFileId = getUploadFileId();

		surveyOptionCacheModel.creatorId = getCreatorId();

		surveyOptionCacheModel.modifierId = getModifierId();

		surveyOptionCacheModel.createDate = getCreateDate();

		surveyOptionCacheModel.modifiedDate = getModifiedDate();

		return surveyOptionCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(27);

		sb.append("{surveyOptionId=");
		sb.append(getSurveyOptionId());
		sb.append(", surveyMainId=");
		sb.append(getSurveyMainId());
		sb.append(", surveyPageId=");
		sb.append(getSurveyPageId());
		sb.append(", surveyQuestionId=");
		sb.append(getSurveyQuestionId());
		sb.append(", no=");
		sb.append(getNo());
		sb.append(", option=");
		sb.append(getOption());
		sb.append(", isAns=");
		sb.append(getIsAns());
		sb.append(", pageDirectId=");
		sb.append(getPageDirectId());
		sb.append(", uploadFileId=");
		sb.append(getUploadFileId());
		sb.append(", creatorId=");
		sb.append(getCreatorId());
		sb.append(", modifierId=");
		sb.append(getModifierId());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(43);

		sb.append("<model><model-name>");
		sb.append("com.lc.survey.model.SurveyOption");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>surveyOptionId</column-name><column-value><![CDATA[");
		sb.append(getSurveyOptionId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>surveyMainId</column-name><column-value><![CDATA[");
		sb.append(getSurveyMainId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>surveyPageId</column-name><column-value><![CDATA[");
		sb.append(getSurveyPageId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>surveyQuestionId</column-name><column-value><![CDATA[");
		sb.append(getSurveyQuestionId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>no</column-name><column-value><![CDATA[");
		sb.append(getNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>option</column-name><column-value><![CDATA[");
		sb.append(getOption());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>isAns</column-name><column-value><![CDATA[");
		sb.append(getIsAns());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>pageDirectId</column-name><column-value><![CDATA[");
		sb.append(getPageDirectId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>uploadFileId</column-name><column-value><![CDATA[");
		sb.append(getUploadFileId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>creatorId</column-name><column-value><![CDATA[");
		sb.append(getCreatorId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifierId</column-name><column-value><![CDATA[");
		sb.append(getModifierId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = SurveyOption.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			SurveyOption.class
		};
	private long _surveyOptionId;
	private long _surveyMainId;
	private long _originalSurveyMainId;
	private boolean _setOriginalSurveyMainId;
	private long _surveyPageId;
	private long _originalSurveyPageId;
	private boolean _setOriginalSurveyPageId;
	private long _surveyQuestionId;
	private long _originalSurveyQuestionId;
	private boolean _setOriginalSurveyQuestionId;
	private int _no;
	private String _option;
	private Boolean _isAns;
	private Boolean _originalIsAns;
	private boolean _setOriginalIsAns;
	private long _pageDirectId;
	private long _uploadFileId;
	private long _creatorId;
	private long _modifierId;
	private long _createDate;
	private long _modifiedDate;
	private long _columnBitmask;
	private SurveyOption _escapedModel;
}