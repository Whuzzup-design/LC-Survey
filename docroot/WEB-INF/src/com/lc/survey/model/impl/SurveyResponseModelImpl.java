/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.lc.survey.model.impl;

import com.lc.survey.model.SurveyResponse;
import com.lc.survey.model.SurveyResponseModel;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the SurveyResponse service. Represents a row in the &quot;lc_SurveyResponse&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.lc.survey.model.SurveyResponseModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link SurveyResponseImpl}.
 * </p>
 *
 * @author kevin
 * @see SurveyResponseImpl
 * @see com.lc.survey.model.SurveyResponse
 * @see com.lc.survey.model.SurveyResponseModel
 * @generated
 */
public class SurveyResponseModelImpl extends BaseModelImpl<SurveyResponse>
	implements SurveyResponseModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a survey response model instance should use the {@link com.lc.survey.model.SurveyResponse} interface instead.
	 */
	public static final String TABLE_NAME = "lc_SurveyResponse";
	public static final Object[][] TABLE_COLUMNS = {
			{ "surveyResponseId", Types.BIGINT },
			{ "surveyMainId", Types.BIGINT },
			{ "writerId", Types.BIGINT },
			{ "response", Types.VARCHAR },
			{ "creatorId", Types.BIGINT },
			{ "createDate", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table lc_SurveyResponse (surveyResponseId LONG not null primary key,surveyMainId LONG,writerId LONG,response STRING null,creatorId LONG,createDate LONG)";
	public static final String TABLE_SQL_DROP = "drop table lc_SurveyResponse";
	public static final String ORDER_BY_JPQL = " ORDER BY surveyResponse.createDate DESC";
	public static final String ORDER_BY_SQL = " ORDER BY lc_SurveyResponse.createDate DESC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.lc.survey.model.SurveyResponse"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.lc.survey.model.SurveyResponse"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.lc.survey.model.SurveyResponse"),
			true);
	public static long SURVEYMAINID_COLUMN_BITMASK = 1L;
	public static long WRITERID_COLUMN_BITMASK = 2L;
	public static long CREATEDATE_COLUMN_BITMASK = 4L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.lc.survey.model.SurveyResponse"));

	public SurveyResponseModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _surveyResponseId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setSurveyResponseId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _surveyResponseId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return SurveyResponse.class;
	}

	@Override
	public String getModelClassName() {
		return SurveyResponse.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("surveyResponseId", getSurveyResponseId());
		attributes.put("surveyMainId", getSurveyMainId());
		attributes.put("writerId", getWriterId());
		attributes.put("response", getResponse());
		attributes.put("creatorId", getCreatorId());
		attributes.put("createDate", getCreateDate());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long surveyResponseId = (Long)attributes.get("surveyResponseId");

		if (surveyResponseId != null) {
			setSurveyResponseId(surveyResponseId);
		}

		Long surveyMainId = (Long)attributes.get("surveyMainId");

		if (surveyMainId != null) {
			setSurveyMainId(surveyMainId);
		}

		Long writerId = (Long)attributes.get("writerId");

		if (writerId != null) {
			setWriterId(writerId);
		}

		String response = (String)attributes.get("response");

		if (response != null) {
			setResponse(response);
		}

		Long creatorId = (Long)attributes.get("creatorId");

		if (creatorId != null) {
			setCreatorId(creatorId);
		}

		Long createDate = (Long)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}
	}

	@Override
	public long getSurveyResponseId() {
		return _surveyResponseId;
	}

	@Override
	public void setSurveyResponseId(long surveyResponseId) {
		_surveyResponseId = surveyResponseId;
	}

	@Override
	public long getSurveyMainId() {
		return _surveyMainId;
	}

	@Override
	public void setSurveyMainId(long surveyMainId) {
		_columnBitmask |= SURVEYMAINID_COLUMN_BITMASK;

		if (!_setOriginalSurveyMainId) {
			_setOriginalSurveyMainId = true;

			_originalSurveyMainId = _surveyMainId;
		}

		_surveyMainId = surveyMainId;
	}

	public long getOriginalSurveyMainId() {
		return _originalSurveyMainId;
	}

	@Override
	public long getWriterId() {
		return _writerId;
	}

	@Override
	public void setWriterId(long writerId) {
		_columnBitmask |= WRITERID_COLUMN_BITMASK;

		if (!_setOriginalWriterId) {
			_setOriginalWriterId = true;

			_originalWriterId = _writerId;
		}

		_writerId = writerId;
	}

	public long getOriginalWriterId() {
		return _originalWriterId;
	}

	@Override
	public String getResponse() {
		if (_response == null) {
			return StringPool.BLANK;
		}
		else {
			return _response;
		}
	}

	@Override
	public void setResponse(String response) {
		_response = response;
	}

	@Override
	public long getCreatorId() {
		return _creatorId;
	}

	@Override
	public void setCreatorId(long creatorId) {
		_creatorId = creatorId;
	}

	@Override
	public long getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(long createDate) {
		_columnBitmask = -1L;

		_createDate = createDate;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			SurveyResponse.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public SurveyResponse toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (SurveyResponse)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		SurveyResponseImpl surveyResponseImpl = new SurveyResponseImpl();

		surveyResponseImpl.setSurveyResponseId(getSurveyResponseId());
		surveyResponseImpl.setSurveyMainId(getSurveyMainId());
		surveyResponseImpl.setWriterId(getWriterId());
		surveyResponseImpl.setResponse(getResponse());
		surveyResponseImpl.setCreatorId(getCreatorId());
		surveyResponseImpl.setCreateDate(getCreateDate());

		surveyResponseImpl.resetOriginalValues();

		return surveyResponseImpl;
	}

	@Override
	public int compareTo(SurveyResponse surveyResponse) {
		int value = 0;

		if (getCreateDate() < surveyResponse.getCreateDate()) {
			value = -1;
		}
		else if (getCreateDate() > surveyResponse.getCreateDate()) {
			value = 1;
		}
		else {
			value = 0;
		}

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof SurveyResponse)) {
			return false;
		}

		SurveyResponse surveyResponse = (SurveyResponse)obj;

		long primaryKey = surveyResponse.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		SurveyResponseModelImpl surveyResponseModelImpl = this;

		surveyResponseModelImpl._originalSurveyMainId = surveyResponseModelImpl._surveyMainId;

		surveyResponseModelImpl._setOriginalSurveyMainId = false;

		surveyResponseModelImpl._originalWriterId = surveyResponseModelImpl._writerId;

		surveyResponseModelImpl._setOriginalWriterId = false;

		surveyResponseModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<SurveyResponse> toCacheModel() {
		SurveyResponseCacheModel surveyResponseCacheModel = new SurveyResponseCacheModel();

		surveyResponseCacheModel.surveyResponseId = getSurveyResponseId();

		surveyResponseCacheModel.surveyMainId = getSurveyMainId();

		surveyResponseCacheModel.writerId = getWriterId();

		surveyResponseCacheModel.response = getResponse();

		String response = surveyResponseCacheModel.response;

		if ((response != null) && (response.length() == 0)) {
			surveyResponseCacheModel.response = null;
		}

		surveyResponseCacheModel.creatorId = getCreatorId();

		surveyResponseCacheModel.createDate = getCreateDate();

		return surveyResponseCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(13);

		sb.append("{surveyResponseId=");
		sb.append(getSurveyResponseId());
		sb.append(", surveyMainId=");
		sb.append(getSurveyMainId());
		sb.append(", writerId=");
		sb.append(getWriterId());
		sb.append(", response=");
		sb.append(getResponse());
		sb.append(", creatorId=");
		sb.append(getCreatorId());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(22);

		sb.append("<model><model-name>");
		sb.append("com.lc.survey.model.SurveyResponse");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>surveyResponseId</column-name><column-value><![CDATA[");
		sb.append(getSurveyResponseId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>surveyMainId</column-name><column-value><![CDATA[");
		sb.append(getSurveyMainId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>writerId</column-name><column-value><![CDATA[");
		sb.append(getWriterId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>response</column-name><column-value><![CDATA[");
		sb.append(getResponse());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>creatorId</column-name><column-value><![CDATA[");
		sb.append(getCreatorId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = SurveyResponse.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			SurveyResponse.class
		};
	private long _surveyResponseId;
	private long _surveyMainId;
	private long _originalSurveyMainId;
	private boolean _setOriginalSurveyMainId;
	private long _writerId;
	private long _originalWriterId;
	private boolean _setOriginalWriterId;
	private String _response;
	private long _creatorId;
	private long _createDate;
	private long _columnBitmask;
	private SurveyResponse _escapedModel;
}