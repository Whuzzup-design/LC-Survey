/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.lc.survey.model.impl;

import com.lc.survey.model.SurveyResult;
import com.lc.survey.model.SurveyResultModel;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the SurveyResult service. Represents a row in the &quot;lc_SurveyResult&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.lc.survey.model.SurveyResultModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link SurveyResultImpl}.
 * </p>
 *
 * @author kevin
 * @see SurveyResultImpl
 * @see com.lc.survey.model.SurveyResult
 * @see com.lc.survey.model.SurveyResultModel
 * @generated
 */
public class SurveyResultModelImpl extends BaseModelImpl<SurveyResult>
	implements SurveyResultModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a survey result model instance should use the {@link com.lc.survey.model.SurveyResult} interface instead.
	 */
	public static final String TABLE_NAME = "lc_SurveyResult";
	public static final Object[][] TABLE_COLUMNS = {
			{ "surveyResultId", Types.BIGINT },
			{ "surveyMainId", Types.BIGINT },
			{ "surveyPageId", Types.BIGINT },
			{ "surveyQuestionId", Types.BIGINT },
			{ "surveyOptionId", Types.BIGINT },
			{ "surveyWriterId", Types.BIGINT },
			{ "ans", Types.VARCHAR },
			{ "creatorId", Types.BIGINT },
			{ "createDate", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table lc_SurveyResult (surveyResultId LONG not null primary key,surveyMainId LONG,surveyPageId LONG,surveyQuestionId LONG,surveyOptionId LONG,surveyWriterId LONG,ans STRING null,creatorId LONG,createDate LONG)";
	public static final String TABLE_SQL_DROP = "drop table lc_SurveyResult";
	public static final String ORDER_BY_JPQL = " ORDER BY surveyResult.createDate DESC";
	public static final String ORDER_BY_SQL = " ORDER BY lc_SurveyResult.createDate DESC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.lc.survey.model.SurveyResult"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.lc.survey.model.SurveyResult"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.lc.survey.model.SurveyResult"),
			true);
	public static long SURVEYMAINID_COLUMN_BITMASK = 1L;
	public static long SURVEYOPTIONID_COLUMN_BITMASK = 2L;
	public static long SURVEYPAGEID_COLUMN_BITMASK = 4L;
	public static long SURVEYQUESTIONID_COLUMN_BITMASK = 8L;
	public static long SURVEYWRITERID_COLUMN_BITMASK = 16L;
	public static long CREATEDATE_COLUMN_BITMASK = 32L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.lc.survey.model.SurveyResult"));

	public SurveyResultModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _surveyResultId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setSurveyResultId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _surveyResultId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return SurveyResult.class;
	}

	@Override
	public String getModelClassName() {
		return SurveyResult.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("surveyResultId", getSurveyResultId());
		attributes.put("surveyMainId", getSurveyMainId());
		attributes.put("surveyPageId", getSurveyPageId());
		attributes.put("surveyQuestionId", getSurveyQuestionId());
		attributes.put("surveyOptionId", getSurveyOptionId());
		attributes.put("surveyWriterId", getSurveyWriterId());
		attributes.put("ans", getAns());
		attributes.put("creatorId", getCreatorId());
		attributes.put("createDate", getCreateDate());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long surveyResultId = (Long)attributes.get("surveyResultId");

		if (surveyResultId != null) {
			setSurveyResultId(surveyResultId);
		}

		Long surveyMainId = (Long)attributes.get("surveyMainId");

		if (surveyMainId != null) {
			setSurveyMainId(surveyMainId);
		}

		Long surveyPageId = (Long)attributes.get("surveyPageId");

		if (surveyPageId != null) {
			setSurveyPageId(surveyPageId);
		}

		Long surveyQuestionId = (Long)attributes.get("surveyQuestionId");

		if (surveyQuestionId != null) {
			setSurveyQuestionId(surveyQuestionId);
		}

		Long surveyOptionId = (Long)attributes.get("surveyOptionId");

		if (surveyOptionId != null) {
			setSurveyOptionId(surveyOptionId);
		}

		Long surveyWriterId = (Long)attributes.get("surveyWriterId");

		if (surveyWriterId != null) {
			setSurveyWriterId(surveyWriterId);
		}

		String ans = (String)attributes.get("ans");

		if (ans != null) {
			setAns(ans);
		}

		Long creatorId = (Long)attributes.get("creatorId");

		if (creatorId != null) {
			setCreatorId(creatorId);
		}

		Long createDate = (Long)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}
	}

	@Override
	public long getSurveyResultId() {
		return _surveyResultId;
	}

	@Override
	public void setSurveyResultId(long surveyResultId) {
		_surveyResultId = surveyResultId;
	}

	@Override
	public long getSurveyMainId() {
		return _surveyMainId;
	}

	@Override
	public void setSurveyMainId(long surveyMainId) {
		_columnBitmask |= SURVEYMAINID_COLUMN_BITMASK;

		if (!_setOriginalSurveyMainId) {
			_setOriginalSurveyMainId = true;

			_originalSurveyMainId = _surveyMainId;
		}

		_surveyMainId = surveyMainId;
	}

	public long getOriginalSurveyMainId() {
		return _originalSurveyMainId;
	}

	@Override
	public long getSurveyPageId() {
		return _surveyPageId;
	}

	@Override
	public void setSurveyPageId(long surveyPageId) {
		_columnBitmask |= SURVEYPAGEID_COLUMN_BITMASK;

		if (!_setOriginalSurveyPageId) {
			_setOriginalSurveyPageId = true;

			_originalSurveyPageId = _surveyPageId;
		}

		_surveyPageId = surveyPageId;
	}

	public long getOriginalSurveyPageId() {
		return _originalSurveyPageId;
	}

	@Override
	public long getSurveyQuestionId() {
		return _surveyQuestionId;
	}

	@Override
	public void setSurveyQuestionId(long surveyQuestionId) {
		_columnBitmask |= SURVEYQUESTIONID_COLUMN_BITMASK;

		if (!_setOriginalSurveyQuestionId) {
			_setOriginalSurveyQuestionId = true;

			_originalSurveyQuestionId = _surveyQuestionId;
		}

		_surveyQuestionId = surveyQuestionId;
	}

	public long getOriginalSurveyQuestionId() {
		return _originalSurveyQuestionId;
	}

	@Override
	public long getSurveyOptionId() {
		return _surveyOptionId;
	}

	@Override
	public void setSurveyOptionId(long surveyOptionId) {
		_columnBitmask |= SURVEYOPTIONID_COLUMN_BITMASK;

		if (!_setOriginalSurveyOptionId) {
			_setOriginalSurveyOptionId = true;

			_originalSurveyOptionId = _surveyOptionId;
		}

		_surveyOptionId = surveyOptionId;
	}

	public long getOriginalSurveyOptionId() {
		return _originalSurveyOptionId;
	}

	@Override
	public long getSurveyWriterId() {
		return _surveyWriterId;
	}

	@Override
	public void setSurveyWriterId(long surveyWriterId) {
		_columnBitmask |= SURVEYWRITERID_COLUMN_BITMASK;

		if (!_setOriginalSurveyWriterId) {
			_setOriginalSurveyWriterId = true;

			_originalSurveyWriterId = _surveyWriterId;
		}

		_surveyWriterId = surveyWriterId;
	}

	public long getOriginalSurveyWriterId() {
		return _originalSurveyWriterId;
	}

	@Override
	public String getAns() {
		if (_ans == null) {
			return StringPool.BLANK;
		}
		else {
			return _ans;
		}
	}

	@Override
	public void setAns(String ans) {
		_ans = ans;
	}

	@Override
	public long getCreatorId() {
		return _creatorId;
	}

	@Override
	public void setCreatorId(long creatorId) {
		_creatorId = creatorId;
	}

	@Override
	public long getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(long createDate) {
		_columnBitmask = -1L;

		_createDate = createDate;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			SurveyResult.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public SurveyResult toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (SurveyResult)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		SurveyResultImpl surveyResultImpl = new SurveyResultImpl();

		surveyResultImpl.setSurveyResultId(getSurveyResultId());
		surveyResultImpl.setSurveyMainId(getSurveyMainId());
		surveyResultImpl.setSurveyPageId(getSurveyPageId());
		surveyResultImpl.setSurveyQuestionId(getSurveyQuestionId());
		surveyResultImpl.setSurveyOptionId(getSurveyOptionId());
		surveyResultImpl.setSurveyWriterId(getSurveyWriterId());
		surveyResultImpl.setAns(getAns());
		surveyResultImpl.setCreatorId(getCreatorId());
		surveyResultImpl.setCreateDate(getCreateDate());

		surveyResultImpl.resetOriginalValues();

		return surveyResultImpl;
	}

	@Override
	public int compareTo(SurveyResult surveyResult) {
		int value = 0;

		if (getCreateDate() < surveyResult.getCreateDate()) {
			value = -1;
		}
		else if (getCreateDate() > surveyResult.getCreateDate()) {
			value = 1;
		}
		else {
			value = 0;
		}

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof SurveyResult)) {
			return false;
		}

		SurveyResult surveyResult = (SurveyResult)obj;

		long primaryKey = surveyResult.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		SurveyResultModelImpl surveyResultModelImpl = this;

		surveyResultModelImpl._originalSurveyMainId = surveyResultModelImpl._surveyMainId;

		surveyResultModelImpl._setOriginalSurveyMainId = false;

		surveyResultModelImpl._originalSurveyPageId = surveyResultModelImpl._surveyPageId;

		surveyResultModelImpl._setOriginalSurveyPageId = false;

		surveyResultModelImpl._originalSurveyQuestionId = surveyResultModelImpl._surveyQuestionId;

		surveyResultModelImpl._setOriginalSurveyQuestionId = false;

		surveyResultModelImpl._originalSurveyOptionId = surveyResultModelImpl._surveyOptionId;

		surveyResultModelImpl._setOriginalSurveyOptionId = false;

		surveyResultModelImpl._originalSurveyWriterId = surveyResultModelImpl._surveyWriterId;

		surveyResultModelImpl._setOriginalSurveyWriterId = false;

		surveyResultModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<SurveyResult> toCacheModel() {
		SurveyResultCacheModel surveyResultCacheModel = new SurveyResultCacheModel();

		surveyResultCacheModel.surveyResultId = getSurveyResultId();

		surveyResultCacheModel.surveyMainId = getSurveyMainId();

		surveyResultCacheModel.surveyPageId = getSurveyPageId();

		surveyResultCacheModel.surveyQuestionId = getSurveyQuestionId();

		surveyResultCacheModel.surveyOptionId = getSurveyOptionId();

		surveyResultCacheModel.surveyWriterId = getSurveyWriterId();

		surveyResultCacheModel.ans = getAns();

		String ans = surveyResultCacheModel.ans;

		if ((ans != null) && (ans.length() == 0)) {
			surveyResultCacheModel.ans = null;
		}

		surveyResultCacheModel.creatorId = getCreatorId();

		surveyResultCacheModel.createDate = getCreateDate();

		return surveyResultCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(19);

		sb.append("{surveyResultId=");
		sb.append(getSurveyResultId());
		sb.append(", surveyMainId=");
		sb.append(getSurveyMainId());
		sb.append(", surveyPageId=");
		sb.append(getSurveyPageId());
		sb.append(", surveyQuestionId=");
		sb.append(getSurveyQuestionId());
		sb.append(", surveyOptionId=");
		sb.append(getSurveyOptionId());
		sb.append(", surveyWriterId=");
		sb.append(getSurveyWriterId());
		sb.append(", ans=");
		sb.append(getAns());
		sb.append(", creatorId=");
		sb.append(getCreatorId());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(31);

		sb.append("<model><model-name>");
		sb.append("com.lc.survey.model.SurveyResult");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>surveyResultId</column-name><column-value><![CDATA[");
		sb.append(getSurveyResultId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>surveyMainId</column-name><column-value><![CDATA[");
		sb.append(getSurveyMainId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>surveyPageId</column-name><column-value><![CDATA[");
		sb.append(getSurveyPageId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>surveyQuestionId</column-name><column-value><![CDATA[");
		sb.append(getSurveyQuestionId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>surveyOptionId</column-name><column-value><![CDATA[");
		sb.append(getSurveyOptionId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>surveyWriterId</column-name><column-value><![CDATA[");
		sb.append(getSurveyWriterId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ans</column-name><column-value><![CDATA[");
		sb.append(getAns());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>creatorId</column-name><column-value><![CDATA[");
		sb.append(getCreatorId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = SurveyResult.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			SurveyResult.class
		};
	private long _surveyResultId;
	private long _surveyMainId;
	private long _originalSurveyMainId;
	private boolean _setOriginalSurveyMainId;
	private long _surveyPageId;
	private long _originalSurveyPageId;
	private boolean _setOriginalSurveyPageId;
	private long _surveyQuestionId;
	private long _originalSurveyQuestionId;
	private boolean _setOriginalSurveyQuestionId;
	private long _surveyOptionId;
	private long _originalSurveyOptionId;
	private boolean _setOriginalSurveyOptionId;
	private long _surveyWriterId;
	private long _originalSurveyWriterId;
	private boolean _setOriginalSurveyWriterId;
	private String _ans;
	private long _creatorId;
	private long _createDate;
	private long _columnBitmask;
	private SurveyResult _escapedModel;
}